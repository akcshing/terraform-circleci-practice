version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.0
jobs:
  checkout_code:
    working_directory: ~/terra
    docker:
      - image: circleci/node:10.16.3
    steps:
      # - restore_cache:
      #     keys:
      #       - source-{{ .Branch }}-{{ .Revision }}
      #       - source-{{ .Branch }}-
      #       - source-

      - checkout

      # - save_cache:
      #     key: source-{{ .Branch }}-{{ .Revision }}
      #     paths:
      #       - '~/terra'
      # - save_cache:
      #     key: cache_key_ssh
      #     paths:
      #       - '~/.ssh'
  install:
    working_directory: ~/terra
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      # - restore_cache:
      #     key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: v2-dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: 'npm install'
          command: npm install --no-save
      - save_cache:
          key: v2-dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      # - run:
      #     name: 'npm build'
      #     command: npx react-scripts build
  build:
    working_directory: ~/terra
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      # - restore_cache:
      #     key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: v2-dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: 'npm build'
          command: npx react-scripts build
      - persist_to_workspace:
          root: ~/terra
          paths:
            - build
            - package.json
  deploy:
    working_directory: ~/terra
    docker:
      - image: circleci/python:3.7.4
    steps:
      - aws-s3/sync:
          from: build
          to: s3://terraform-alex-shing

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - checkout_code
      - install:
          requires:
            - checkout_code
      - build:
          requires:
            - install
      - release:
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - release
          filters:
            branches:
              only:
                - master
  # serverless:
  #   docker:
  #     - image: 'circleci/node:10.16.3'
  #   # working_directory: ~/handler
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install Serverless CLI and dependencies
  #         command: |
  #           sudo npm i -g serverless
  #           npm install
  #     - run:
  #         name: Run tests
  #         command: npm test
  #     - run:
  #         name: Deploy application
  #         command: sls deploy --stage pre
